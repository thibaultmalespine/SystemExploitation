// server.js

const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
const PORT = 3000;

app.use(cors()); // Active CORS pour toutes les routes

// Middleware pour parser les requêtes JSON
app.use(bodyParser.json());

// Exemple de données initialisées
let todos = [
  { id: 1, task: 'Faire les courses' },
  { id: 2, task: 'Finir le rapport' },
  { id: 3, task: 'Appeler le client' }
];

// Route pour récupérer toutes les tâches
app.get('/todos', (req, res) => {
  res.json(todos);
});

// Route pour ajouter une nouvelle tâche
app.post('/todos', (req, res) => {
  const { task } = req.body;
  if (!task) {
    return res.status(400).json({ error: 'La tâche est requise.' });
  }
  const newTodo = { id: todos.length + 1, task };
  todos.push(newTodo);
  res.status(201).json(newTodo);
});

// Route pour supprimer une tâche par son identifiant
app.delete('/todos/:id', (req, res) => {
  const { id } = req.params;
  todos = todos.filter(todo => todo.id !== parseInt(id));
  res.sendStatus(204);
});

// Route pour mettre à jour une tâche par son identifiant
app.put('/todos/:id', (req, res) => {
  const { id } = req.params;
  const { task } = req.body;
  const index = todos.findIndex(todo => todo.id === parseInt(id));
  if (index === -1) {
    return res.status(404).json({ error: 'Tâche non trouvée.' });
  }
  todos[index].task = task;
  res.json(todos[index]);
});

// Démarrage du serveur
app.listen(PORT, () => {
  console.log(`Serveur démarré sur le port ${PORT}`);
});

